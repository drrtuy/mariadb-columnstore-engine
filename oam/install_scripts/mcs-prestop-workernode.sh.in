#!/usr/bin/env bash
# Pre-stop helper for mcs-workernode: inspect and reset BRM shmem locks
#   to avoid mcs-savebrm.py hanging on locks.
set -euo pipefail

LOG_DIR="/var/log/mariadb/columnstore"
LOG_FILE="${LOG_DIR}/prestop-workernode.log"
BIN_DIR='@ENGINE_BINDIR@'

SHMEM_LOCKS_BIN="${BIN_DIR}/mcs-shmem-locks"
RESET_LOCKS_BIN="${BIN_DIR}/reset_locks"

log(){
  # $1 - level, $2... - message
  local level="$1"; shift
  printf "%s [%s] %b\n" "$(date -Is)" "${level}" "$*" >> "${LOG_FILE}"
}

mkdir -p "${LOG_DIR}" 2>/dev/null || true
log INFO "Pre-stop: checking BRM shmem locks before stopping workernode."

# This must not happen, but check that the binaries exist just in case
if [[ ! -x "${SHMEM_LOCKS_BIN}" ]]; then
  log ERROR "${SHMEM_LOCKS_BIN} not found; aborting."
  exit 1
fi

if [[ ! -x "${RESET_LOCKS_BIN}" ]]; then
  log ERROR "${RESET_LOCKS_BIN} not found; aborting."
  exit 1
fi

# Capture current lock state
OUT="$(${SHMEM_LOCKS_BIN} --lock-id 0 2>&1)" || true
log INFO "Current lock state:\n${OUT}"

# Determine if any readers/writers are active
ACTIVE_TOTAL=$(echo "${OUT}" | awk -F'=' '/^[[:space:]]*readers =|^[[:space:]]*writers =/ {gsub(/ /, ""); print $2}' | awk '{s+=$1} END {print s+0}')
if [[ "${ACTIVE_TOTAL}" -gt 0 ]]; then
  log WARN "Detected active shmem locks (sum readers+writers=${ACTIVE_TOTAL}). Attempting reset."
  "${RESET_LOCKS_BIN}" -s >/dev/null 2>&1 || log ERROR "reset_locks failed to run."
  sleep 1
  OUT2="$(${SHMEM_LOCKS_BIN} --lock-id 0 2>&1)" || true
  log INFO "Post-reset lock state:\n${OUT2}"
else
  log INFO "No active shmem locks detected."
fi

log INFO "Pre-stop lock inspection/reset finished."

exit 0


